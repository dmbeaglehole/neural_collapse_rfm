import torch

covBs = torch.tensor([0.0454, 0.0372, 0.0535, 0.1000, 0.2073, 0.3749, 0.7030, 1.2858, 2.0579,
        2.7019, 3.1017, 3.3504, 3.4986, 3.6063, 3.6719, 3.7323, 3.7655, 3.8019,
        3.8180, 3.8371, 3.8488, 3.8610, 3.8686, 3.8747, 3.8781, 3.8810, 3.8827,
        3.8835, 3.8845, 3.8853, 3.8852, 3.8852, 3.8847, 3.8848, 3.8853, 3.8854,
        3.8855, 3.8855, 3.8856, 3.8857, 3.8858, 3.8858, 3.8859, 3.8859, 3.8859,
        3.8859, 3.8860, 3.8863, 3.8867, 3.8863]) 

covWs = torch.tensor([1.9773, 1.9814, 1.9732, 1.9500, 1.8963, 1.8126, 1.6485, 1.3571, 0.9710,
        0.6490, 0.4491, 0.3248, 0.2507, 0.1969, 0.1641, 0.1339, 0.1172, 0.0991,
        0.0910, 0.0814, 0.0756, 0.0695, 0.0657, 0.0627, 0.0610, 0.0595, 0.0586,
        0.0583, 0.0577, 0.0573, 0.0574, 0.0574, 0.0576, 0.0576, 0.0574, 0.0573,
        0.0573, 0.0572, 0.0572, 0.0572, 0.0571, 0.0571, 0.0571, 0.0571, 0.0570,
        0.0570, 0.0570, 0.0568, 0.0567, 0.0568])

import matplotlib.pyplot as plt
plt.rcParams['text.usetex'] = True

plt.plot(covBs, label=r'$tr(\Sigma^1_B) / tr(\Sigma^1_T)$')
plt.plot(covWs, label=r'$tr(\Sigma^1_W) / tr(\Sigma^1_T)$')
plt.legend()
plt.xlabel("Epochs")
plt.title("Normalized feature variance throughout training")
plt.savefig("feature_var.pdf",format="pdf")
